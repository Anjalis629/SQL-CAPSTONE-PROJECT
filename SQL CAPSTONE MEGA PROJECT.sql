USE MY_LEARNING

CREATE TABLE EMPLOYEE_DETAILS
(
EMP_ID INT,
FIRST_NAME VARCHAR(40),
LAST_NAME VARCHAR(40),
SALARY MONEY,
JOINING_DATE VARCHAR(60),
DEPARTMENT VARCHAR(40),
GENDER VARCHAR(30)
)

SELECT * FROM EMPLOYEE_DETAILS

SELECT FIRST_NAME FROM EMPLOYEE_DETAILS-------------------------GET FIRST NAME FROM COLUMN

SELECT FIRST_NAME AS FIRSTNAME
FROM EMPLOYEE_DETAILS

SELECT CONCAT(FIRST_NAME,' ',LAST_NAME) AS NAME_
FROM EMPLOYEE_DETAILS---------------------------------------------CONCAT USED TO COMBINE TWO COLUMNS

SELECT * FROM EMPLOYEE_DETAILS
WHERE FIRST_NAME = 'VIKAS'-----------------------------------------SELECT EMPLOYEE DETAIL OF VIKAS

SELECT * FROM EMPLOYEE_DETAILS
WHERE FIRST_NAME LIKE 'A%'----------------------------------------EMPLOYEE DETAILS WHOSE FIRST NAME STARTS WITH A

SELECT * FROM EMPLOYEE_DETAILS
WHERE FIRST_NAME LIKE '%H'-----------------------------------------FIRST NAME ENDS WITH H

SELECT * FROM EMPLOYEE_DETAILS
WHERE FIRST_NAME LIKE '[A-P]%'

SELECT * FROM EMPLOYEE_DETAILS
WHERE GENDER LIKE '__LE'

SELECT * FROM EMPLOYEE_DETAILS
WHERE FIRST_NAME LIKE '%(%)'---------------------------------------------FIRST NAME STARTS WITH %

SELECT CONVERT(VARCHAR(30), JOINING_DATE, 106) FROM EMPLOYEE_DETAILS

SELECT DISTINCT DEPARTMENT
FROM EMPLOYEE_DETAILS----------------------------------------------------UNIQUE DEPARTMENTS

SELECT MAX (SALARY) AS MAX_SALARY
FROM EMPLOYEE_DETAILS-----------------------------------------------------HIGHEST SALARY FROM TABLE

SELECT MIN (SALARY) AS LOWEST_SALARY
FROM EMPLOYEE_DETAILS-----------------------------------------------------LOWEST SALRY FROM TABLE

SELECT GETDATE()-------------------------------------------------------CURRENT SYSTEM DATE

SELECT DATEPART(YEAR, JOINING_DATE) AS YEAR_PART FROM EMPLOYEE_DETAILS-----------------------TO GET YEAR PART

SELECT DATEPART(MONTH, JOINING_DATE) AS MONTH_PART FROM EMPLOYEE_DETAILS----------------------TO GET MONTH PART

SELECT CONVERT (VARCHAR(60), JOINING_DATE, 108) AS TIME_PART FROM EMPLOYEE_DETAILS 

SELECT FIRST_NAME, GETDATE(), JOINING_DATE,
DATEDIFF (DAY, JOINING_DATE, GETDATE()) AS TOTAL_DAYS FROM EMPLOYEE_DETAILS

SELECT * FROM EMPLOYEE_DETAILS
WHERE DATEPART(YEAR, JOINING_DATE) = '2013'-------------------------------------------------DATA OF EMPLOYEES WITH JOINING YEAR 2013

SELECT * FROM EMPLOYEE_DETAILS
WHERE DATEPART(MONTH, JOINING_DATE) = '1'--------------------------------------------------DATA OF EMPLOYEES WITH JOINING MONTH IS 1JAN

SELECT COUNT(*) FROM EMPLOYEE_DETAILS-------------------------------------------------TOTAL COUNT OF EMPLOYEES

SELECT TOP 1 * FROM EMPLOYEE_DETAILS---------------------------------------------GET TOP 1 DATA

SELECT * FROM EMPLOYEE_DETAILS
WHERE FIRST_NAME IN ('VIKAS', 'ASHISH', 'NIKHIL')----------------------------FIRST NAME WITH

SELECT * FROM EMPLOYEE_DETAILS
WHERE FIRST_NAME NOT IN ('VIKAS', 'ASHISH', 'NIKHIL')----------------------------------------FIRST NAME NOT WITH

SELECT RTRIM(FIRST_NAME) AS FIRSTNAME
FROM EMPLOYEE_DETAILS-------------------------------------------------------------------------REMOVING WHITE SPACE FROM RIGHT SIDE

SELECT LTRIM(FIRST_NAME) AS FIRSTNAME 
FROM EMPLOYEE_DETAILS--------------------------------------------------------------------------REMOVING WHITE SPACE FROM LEFT SIDE

SELECT 'HELLO ' + FIRST_NAME FROM EMPLOYEE_DETAILS---------------------------------------------PREFIXED WITH HELLO

SELECT * FROM EMPLOYEE_DETAILS
WHERE SALARY > 600000---------------------------------------------------------------------------SALARY GREATER THAN 600000

SELECT * FROM EMPLOYEE_DETAILS
WHERE SALARY < 700000----------------------------------------------------------------------------SALARY LESS THAN 700000

SELECT * FROM EMPLOYEE_DETAILS
WHERE SALARY BETWEEN 500000 AND 600000-----------------------------------------------------------SALARY BETWEEN 500000 AND 600000

--------------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE PROJECT_TABLE
(
PROJECT_ID INT,
EMPLOYEE_ID INT,
PROJECT_NAME VARCHAR(60)
)

SELECT * FROM PROJECT_TABLE
SELECT * FROM EMPLOYEE_DETAILS

SELECT DEPARTMENT, SUM(SALARY) AS TOTAL_SALARY 
FROM EMPLOYEE_DETAILS
GROUP BY DEPARTMENT-----------------------------------------------------------------DEPARTMENT WISE SALARY

SELECT DEPARTMENT, SUM(SALARY) AS TOTAL_SALARY
FROM EMPLOYEE_DETAILS
GROUP BY DEPARTMENT
ORDER BY SUM(SALARY) ASC---------------------------------------------------------DEPARTMENT WISE SALARY IN ASCENDING ORDER

SELECT DEPARTMENT, SUM(SALARY) AS TOTAL_SALARY
FROM EMPLOYEE_DETAILS
GROUP BY DEPARTMENT
ORDER BY SUM(SALARY) DESC---------------------------------------------------------DEPARTMENT WISE SALARY IN DESCENDINFG SALARY

SELECT DEPARTMENT, COUNT(*) AS TOTAL_DEPARTMENT, SUM(SALARY) AS TOTAL_SALARY 
FROM EMPLOYEE_DETAILS
GROUP BY DEPARTMENT----------------------------------------------------------------get the department, total no. of departments, total(sum) salary with respect to department

SELECT DEPARTMENT, AVG(SALARY) AS AVG_SALARY
FROM EMPLOYEE_DETAILS
GROUP BY DEPARTMENT
ORDER BY AVG(SALARY) ASC------------------------------------------------------------DEOPARTMENT WISE AVG SALARY

SELECT DEPARTMENT, MAX(SALARY) AS MAX_SAALRY
FROM EMPLOYEE_DETAILS
GROUP BY DEPARTMENT
ORDER BY MAX(SALARY) ASC------------------------------------------------------------DEPARTMENT WISE MAX SALARY

SELECT DEPARTMENT, MIN(SALARY) AS MIN_SALARY
FROM EMPLOYEE_DETAILS
GROUP BY DEPARTMENT
ORDER BY MIN(SALARY) ASC----------------------------------------------------------DEPARTMENT WISE MIN SALARY

SELECT * FROM EMPLOYEE_DETAILS
INNER JOIN PROJECT_TABLE
ON EMPLOYEE_DETAILS.EMP_ID = PROJECT_TABLE.EMPLOYEE_ID-------------------------------JOIN BOTH TABLES ON COMMON PARAMETER

SELECT FIRST_NAME, PROJECT_NAME FROM EMPLOYEE_DETAILS
INNER JOIN PROJECT_TABLE
ON EMP_ID = EMPLOYEE_ID
ORDER BY FIRST_NAME------------------------------------------------------------------EMPLOYEES WHO HAVE ASSIGNED PROJECT

SELECT FIRST_NAME, PROJECT_NAME FROM EMPLOYEE_DETAILS
LEFT OUTER JOIN PROJECT_TABLE
ON EMP_ID = EMPLOYEE_ID
ORDER BY FIRST_NAME-------------------------------------------------------------------EMPLOYEES WHO HAVE NOT ASSIGNED PROJECT

SELECT FIRST_NAME, ISNULL(PROJECT_NAME, '-NO PROJECT ASSIGNED') 
FROM EMPLOYEE_DETAILS
LEFT OUTER JOIN PROJECT_TABLE
ON EMP_ID = EMPLOYEE_ID 
ORDER BY FIRST_NAME

SELECT FIRST_NAME, PROJECT_NAME FROM EMPLOYEE_DETAILS
RIGHT OUTER JOIN PROJECT_TABLE
ON EMP_ID = EMPLOYEE_ID
ORDER BY FIRST_NAME

SELECT FIRST_NAME, PROJECT_NAME FROM EMPLOYEE_DETAILS
FULL OUTER JOIN PROJECT_TABLE
ON EMP_ID = EMPLOYEE_ID
ORDER BY FIRST_NAME---------------------------------------------------------------COMPLETE RECORDS FROM BOTH TABLE

SELECT EMP_ID, FIRST_NAME, PROJECT_NAME FROM EMPLOYEE_DETAILS
INNER JOIN PROJECT_TABLE
ON EMP_ID = EMPLOYEE_ID
WHERE EMP_ID IN (SELECT EMPLOYEE_ID FROM PROJECT_TABLE) 
GROUP BY EMPLOYEE_ID HAVING COUNT(*) > 1

SELECT * FROM EMPLOYEE_DETAILS
CROSS JOIN PROJECT_TABLE------------------------------------------------------------CROSS JOIN BOTH TABLES

------------------------------------------------------------------------------------------------------------------------------
SELECT * FROM PROJECT_TABLE
SELECT * FROM EMPLOYEE_DETAILS

CREATE TABLE FUEL_TABLE
(
ID INT,
FUEL INT,
DATE VARCHAR(60)
)

SELECT * FROM FUEL_TABLE

SELECT UPPER(SUBSTRING(FIRST_NAME, 1,1))+
LOWER(SUBSTRING(FIRST_NAME, 2, LEN(FIRST_NAME)-1)) AS FIRSTNAME FROM EMPLOYEE_DETAILS------------------FIRST LETTER OF NAME IN UPPERCASE AND OTHER LETTER IN LOWERCASE











